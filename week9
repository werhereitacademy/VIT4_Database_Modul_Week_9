-- 1. İlk isminde Nick, Ed ve Jennifer adları bulunan aktörlerin adını ve soyadını gösterin 
SELECT first_name, last_name 
FROM actor 
WHERE first_name IN ('Nick', 'Ed', 'Jennifer');

-- 2. İlk isminde adları Ed, Nick ve Jennifer olan aktörün sadece soyadını gösterin.
SELECT last_name 
FROM actor 
WHERE first_name IN ('Nick', 'Ed', 'Jennifer');

-- 3. Adres tablosunun bütün ayrıntılarını gösterin.
SELECT * FROM address;

-- 4. Adres tablosunda ilçe ve telefonu (district & phone) azalan sırada gösterin.
SELECT district, phone 
FROM address 
ORDER BY district DESC, phone DESC;

/*
5. Film ve envanter tablosundaki film_id’yi kullanarak, Film tablosundan 
film_id’yi, title’ i ve Envanter tablosundan envanter_id'sini gösterin.
*/
SELECT f.film_id, f.title, i.inventory_id
FROM film AS f
JOIN inventory AS i ON f.film_id = i.inventory_id;

-- 6. Envanter tablosu ve rental tablosundan oluşan ilk 5 satırı gösterin.
SELECT * 
FROM inventory AS i
FULL JOIN rental AS r ON i.inventory_id = r.inventory_id
LIMIT 5;

/*
7. Rental ve Payment tablolarından oluşan amount a göre azalan olarak sıralanmış 
rental_id, rental_date, payment_id ‘den oluşan ilk 10 satırı gösterin.
*/
SELECT r.rental_id, r.rental_date, p.payment_id
FROM rental AS r
JOIN payment AS p ON r.rental_id = p.rental_id
ORDER BY p.amount DESC
LIMIT 10;

-- 8. Actor tablosunda actor_id 'nin boş olduğu satırların diğer detaylarını gösteriniz.
SELECT * FROM actor WHERE actor_id IS NULL;

-- 9. Actor tablosunda actor_id 'nin boş oLmadigi satırların diğer detaylarını gösteriniz.
SELECT * FROM actor WHERE actor_id IS NOT NULL;

-- 10. Film tablosunda boş olmayan satırların sayısını bulunuz.
SELECT COUNT(film_id) FROM film WHERE film_id IS NULL; 

-- 11. Payment tablosundan amount’un toplamını çıktı başlığı sum_amt olarak gösteriniz.
SELECT SUM(amount) AS sum_amt FROM payment;

-- 12. Payment tablosundan maximum ve minimum amount ‘u gösteriniz.
SELECT MAX(amount), MIN(amount) FROM payment;
